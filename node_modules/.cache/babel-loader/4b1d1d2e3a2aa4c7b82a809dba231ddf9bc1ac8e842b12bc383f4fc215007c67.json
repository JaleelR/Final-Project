{"ast":null,"code":"var _s = $RefreshSig$();\n// useLocalStorage.js\n\nimport { useState } from 'react';\nexport const useAuth = (key, initialValue) => {\n  _s();\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.error(error);\n      return initialValue;\n    }\n  });\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return [storedValue, setValue];\n};\n_s(useAuth, \"KeUYbU4tz1tjMRvdFmDeEt6fkB4=\");","map":{"version":3,"names":["useState","useAuth","key","initialValue","_s","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","setValue","value","valueToStore","Function","setItem","stringify"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/useLocalStorage.js"],"sourcesContent":["// useLocalStorage.js\n\nimport { useState } from 'react';\n\nexport const useAuth = (key, initialValue) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            return item ? JSON.parse(item) : initialValue;\n        } catch (error) {\n            // If error also return initialValue\n            console.error(error);\n            return initialValue;\n        }\n    });\n\n    const setValue = (value) => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return [storedValue, setValue];\n}\n\n\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,YAAY,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,MAAM;IACjD,IAAI;MACA;MACA,MAAMO,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC;MAC7C;MACA,OAAOK,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAGJ,YAAY;IACjD,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZ;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,OAAOV,YAAY;IACvB;EACJ,CAAC,CAAC;EAEF,MAAMY,QAAQ,GAAIC,KAAK,IAAK;IACxB,IAAI;MACA;MACA,MAAMC,YAAY,GACdD,KAAK,YAAYE,QAAQ,GAAGF,KAAK,CAACX,WAAW,CAAC,GAAGW,KAAK;MAC1D;MACAV,cAAc,CAACW,YAAY,CAAC;MAC5B;MACAT,MAAM,CAACC,YAAY,CAACU,OAAO,CAACjB,GAAG,EAAES,IAAI,CAACS,SAAS,CAACH,YAAY,CAAC,CAAC;IAClE,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,OAAO,CAACR,WAAW,EAAEU,QAAQ,CAAC;AAClC,CAAC;AAAAX,EAAA,CA7BYH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}