{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompanyDetails = () => {\n  _s();\n  const {\n    handle\n  } = useParams();\n  const [company, setCompany] = useState({});\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    async function getJob() {\n      const JobList = await JoblyApi.getJobs();\n      console.log(\"_____________________________\", JobList);\n      setJobs([...JobList]);\n    }\n    getJob();\n  }, []);\n  async function Company() {\n    const companyData = await JoblyApi.getCompany(handle);\n    setCompany(companyData);\n    setJobs([...companyData.jobs]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: console.log(jobs[0].salary) /* {\n                                          Object.keys(company).length === 0 ?\n                                          <div>  \n                                          {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)}\n                                          </div>\n                                          :\n                                          <div>\n                                          <p > { company.name }</p >\n                                          <p>{company.description}</p>\n                                          {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)\n                                          }\n                                          </div>\n                                          } */\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyDetails, \"fyChRJOPqaj45MnZOtdaPrRrWYI=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JoblyApi","JobCard","jsxDEV","_jsxDEV","CompanyDetails","_s","handle","company","setCompany","jobs","setJobs","getJob","JobList","getJobs","console","log","Company","companyData","getCompany","children","salary","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\n\n\nexport const CompanyDetails = () => {\n    const { handle } = useParams();\n    const [company, setCompany] = useState({});\n    const [jobs, setJobs] = useState([])\n\n\n\n    useEffect(() => {\n        async function getJob() {\n            const JobList = await JoblyApi.getJobs();\n            console.log(\"_____________________________\", JobList);\n            setJobs([...JobList])\n        }\n       getJob();\n    }, []);\n\n\n    async function Company() {\n        const companyData = await JoblyApi.getCompany(handle);\n        setCompany(companyData);\n        setJobs([...companyData.jobs])\n    }\n  \n\n\n    return (\n        <div>\n            { console.log(jobs[0].salary)/* {\n               \n\n                    Object.keys(company).length === 0 ?\n                   <div>  \n                        {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)}\n                    </div>\n                    :\n                    <div>\n\n                    \n                <p > { company.name }</p >\n                    <p>{company.description}</p>\n    {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)\n\n            }\n            </div>\n        } */}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAIpCD,SAAS,CAAC,MAAM;IACZ,eAAec,MAAMA,CAAA,EAAG;MACpB,MAAMC,OAAO,GAAG,MAAMZ,QAAQ,CAACa,OAAO,CAAC,CAAC;MACxCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,OAAO,CAAC;MACrDF,OAAO,CAAC,CAAC,GAAGE,OAAO,CAAC,CAAC;IACzB;IACDD,MAAM,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAGN,eAAeK,OAAOA,CAAA,EAAG;IACrB,MAAMC,WAAW,GAAG,MAAMjB,QAAQ,CAACkB,UAAU,CAACZ,MAAM,CAAC;IACrDE,UAAU,CAACS,WAAW,CAAC;IACvBP,OAAO,CAAC,CAAC,GAAGO,WAAW,CAACR,IAAI,CAAC,CAAC;EAClC;EAIA,oBACIN,OAAA;IAAAgB,QAAA,EACML,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC,CAAC,CAAC,CAACW,MAAM,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZyC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkB5B,CAAC;AAEd,CAAC;AAAAnB,EAAA,CA/CYD,cAAc;EAAA,QACJL,SAAS;AAAA;AAAA0B,EAAA,GADnBrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}