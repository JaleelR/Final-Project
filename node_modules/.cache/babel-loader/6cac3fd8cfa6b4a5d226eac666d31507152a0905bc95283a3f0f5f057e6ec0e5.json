{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\nimport { UserContext } from \"./userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompanyDetails = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const {\n    handle\n  } = useParams();\n  const [company, setCompany] = useState({});\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    async function getJob() {\n      const JobList = await JoblyApi.getJobs();\n      console.log(\"_____________________________\", JobList);\n      setJobs([...JobList]);\n    }\n    getJob();\n  }, []);\n  useEffect(() => {\n    async function CompanyCall() {\n      try {\n        const companyData = await JoblyApi.getCompany(handle);\n        setCompany(companyData);\n        setJobs([...companyData.jobs]);\n      } catch (e) {\n        console.log(\"No company\");\n      }\n    }\n    CompanyCall();\n  }, []);\n  if (!currentUser) {\n    navigate(\"/\");\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(company).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"all jobs\"), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        title: job.title,\n        salary: job.salary,\n        equity: job.equity\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"one company\"), \"  \", console.log(\"################\", company), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: company.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        title: job.title,\n        salary: job.salary,\n        equity: job.equity\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyDetails, \"H6u89i5rgp3OHYnIp4bsrH/E9Po=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","useNavigate","JoblyApi","JobCard","UserContext","jsxDEV","_jsxDEV","CompanyDetails","_s","currentUser","navigate","handle","company","setCompany","jobs","setJobs","getJob","JobList","getJobs","console","log","CompanyCall","companyData","getCompany","e","children","Object","keys","length","map","job","title","salary","equity","id","fileName","_jsxFileName","lineNumber","columnNumber","name","description","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js"],"sourcesContent":["import React, {useEffect, useState, useContext} from \"react\";\nimport {useParams, useNavigate} from \"react-router-dom\"\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\nimport { UserContext } from \"./userContext\";\n\n\nexport const CompanyDetails = () => {\n    const { currentUser } = useContext(UserContext);\n    const navigate = useNavigate();  \n    const { handle } = useParams();\n    const [company, setCompany] = useState({});\n    const [jobs, setJobs] = useState([])\n\n\n\n    useEffect(() => {\n        async function getJob() {\n            const JobList = await JoblyApi.getJobs();\n            console.log(\"_____________________________\", JobList);\n            setJobs([...JobList])\n        }\n       getJob();\n    }, []);\n\n    useEffect(() => { \n        async function CompanyCall() { \n            try {\n                 const companyData = await JoblyApi.getCompany(handle);\n        setCompany(companyData);\n        setJobs([...companyData.jobs])   \n            } catch (e) {\n               console.log(\"No company\") \n      }\n    \n    }\n    CompanyCall(); \n}, []);\n    \n    if (!currentUser) {\n        navigate(\"/\");\n        return null;\n    } \n\n    return (\n        <div>\n           \n            {Object.keys(company).length === 0 ?\n            <div>  \n                    {console.log(\"all jobs\")} \n                        {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)}\n                    </div>\n                    :\n\n                    <div>\n                    {console.log(\"one company\")}  {console.log(\"################\", company)}\n                <p > { company.name }</p >\n                    <p>{company.description}</p>\n    {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)\n\n            }\n            </div>\n        }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}