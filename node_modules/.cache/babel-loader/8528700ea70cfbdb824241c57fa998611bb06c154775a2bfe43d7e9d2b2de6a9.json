{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport { JoblyApi } from './Api';\nimport { NavBar } from './NavBar';\nimport { RouteComponent as Routes } from './RouteComponent';\nimport { UserContext } from './userContext';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState();\n  const [currentUser, setCurrentUser] = use();\n  useEffect(() => {\n    async function getUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwtDecode(token);\n          console.log(\"!!!!!!!\", username);\n          JoblyApi.apiToken = token;\n          let user = JoblyApi.getUserInfo(username);\n          setCurrentUser(user);\n        } catch (e) {\n          console.log(\"Error:\", e);\n        }\n      }\n    }\n    getUser();\n  }, [token]);\n  async function register(username, password, firstName, lastName, email) {\n    try {\n      const gotToken = await JoblyApi.signup(username, password, firstName, lastName, email);\n      setToken(gotToken.token);\n      console.log(gotToken.token);\n      console.log(\"Success!\");\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n  ;\n\n  //   try {\n  //   console.log(\"success!\")\n  // }\n  //   catch (e) {\n  //     console.log(\"Error:\", e)\n  //   }\n\n  async function login(username, password) {\n    try {\n      const getToken = await JoblyApi.login(username, password);\n      setToken(getToken.token);\n      console.log(getToken.token);\n      console.log(\"success!\");\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n  ;\n  function logout() {\n    setToken(\"\");\n    console.log(token);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          register: register,\n          login: login,\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"53gWZVYLZTYZjWpgb2o1I8HXzgU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BrowserRouter","JoblyApi","NavBar","RouteComponent","Routes","UserContext","jwtDecode","jsxDEV","_jsxDEV","App","_s","token","setToken","currentUser","setCurrentUser","use","getUser","username","console","log","apiToken","user","getUserInfo","e","register","password","firstName","lastName","email","gotToken","signup","login","getToken","logout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/App.js"],"sourcesContent":["import React, {  useState, useEffect } from 'react';\nimport { useNavigate, BrowserRouter } from \"react-router-dom\"\nimport './App.css';\nimport { JoblyApi } from './Api';\nimport { NavBar } from './NavBar';\nimport { RouteComponent as Routes } from './RouteComponent';\nimport { UserContext } from './userContext';\nimport { jwtDecode } from \"jwt-decode\";\n\nfunction App() {\n  const [token, setToken] = useState();\n  const [currentUser, setCurrentUser] = use();\n\n\n  useEffect(() => {\n    async function getUser() {\n      if (token) {\n        try {\n          let { username } = jwtDecode(token);\n                 console.log(\"!!!!!!!\", username);\n          JoblyApi.apiToken = token;\n          let user = JoblyApi.getUserInfo(username);\n          setCurrentUser(user);\n        } catch (e) {\n          console.log(\"Error:\", e)\n        }\n      }\n    }\n    getUser();\n  }, [token] )\n\n\n\n\n  async function register(username, password, firstName, lastName, email) {\n    try {\n      const gotToken = await JoblyApi.signup(username, password, firstName, lastName, email);\n      setToken(gotToken.token);\n      console.log(gotToken.token);\n      console.log(\"Success!\")\n    } catch (e) {\n      console.log(\"Error:\", e)\n    }\n  };\n\n//   try {\n//   console.log(\"success!\")\n// }\n//   catch (e) {\n//     console.log(\"Error:\", e)\n//   }\n\n  async function login(username, password) {\n      try{\n      const getToken = await JoblyApi.login(username, password);\n        setToken(getToken.token);\n\n        console.log(getToken.token)\n        console.log(\"success!\")\n  }\n  catch (e) {\n    console.log(\"Error:\", e)\n  }\n  };\n  \n\n  \n  function logout() { \n    setToken(\"\");\n    console.log(token);\n  }\n\n\n\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <header className=\"App-header\"> \n          <Routes register={register} login={login} logout={ logout} />\n        \n      \n        \n        \n      </header>\n    </div >\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}