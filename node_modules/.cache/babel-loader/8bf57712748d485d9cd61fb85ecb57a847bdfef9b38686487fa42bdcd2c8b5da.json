{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompanyDetails = () => {\n  _s();\n  const {\n    handle\n  } = useParams();\n  const [company, setCompany] = useState({});\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    async function getJob() {}\n  }, []);\n  useEffect(() => {\n    async function CompanyCall() {\n      const companyData = await JoblyApi.getCompany(handle);\n      if (!companyData == undefined) {\n        setCompany(companyData);\n        setJobs([...companyData.jobs]);\n      } else {\n        const JobList = await JoblyApi.getJobs();\n        console.log(\"_____________________________\", JobList);\n        setJobs([...JobList]);\n      }\n    }\n    CompanyCall();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(company).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"all jobs\"), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        title: job.title,\n        salary: job.salary,\n        equity: job.equity\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(\"one company\"), \"  \", console.log(\"################\", company), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", company.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: company.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        title: job.title,\n        salary: job.salary,\n        equity: job.equity\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 22\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyDetails, \"O+kdV8iCpw2XxIxm2SLKohpniUQ=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JoblyApi","JobCard","jsxDEV","_jsxDEV","CompanyDetails","_s","handle","company","setCompany","jobs","setJobs","getJob","CompanyCall","companyData","getCompany","undefined","JobList","getJobs","console","log","children","Object","keys","length","map","job","title","salary","equity","id","fileName","_jsxFileName","lineNumber","columnNumber","name","description","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport { JoblyApi } from \"./Api\";\nimport { JobCard } from \"./jobCard\";\n\n\n\nexport const CompanyDetails = () => {\n    const { handle } = useParams();\n    const [company, setCompany] = useState({});\n    const [jobs, setJobs] = useState([])\n\n\n\n    useEffect(() => {\n        async function getJob() {\n          \n        }\n     \n    }, []);\n\n    useEffect(() => { \n        async function CompanyCall() { \n            const companyData = await JoblyApi.getCompany(handle);\n            if (!companyData == undefined) {\n                   setCompany(companyData);\n                setJobs([...companyData.jobs])  \n             }\n            else {\n  const JobList = await JoblyApi.getJobs();\n            console.log(\"_____________________________\", JobList);\n                setJobs([...JobList]);\n             \n            }\n            \n    }\n\nCompanyCall();\n}, []);\n    \n\n\n    return (\n        <div>\n           \n            {Object.keys(company).length === 0 ?\n            <div>  \n                    {console.log(\"all jobs\")} \n                        {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)}\n                    </div>\n                    :\n\n                    <div>\n                    {console.log(\"one company\")}  {console.log(\"################\", company)}\n                <p > { company.name }</p >\n                    <p>{company.description}</p>\n    {jobs.map(job => <JobCard title={job.title} salary={job.salary} equity={job.equity} key={job.id} />)\n\n            }\n            </div>\n        }\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}