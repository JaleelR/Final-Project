{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { JoblyApi } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CompanyDetails = () => {\n  _s();\n  const {\n    handle\n  } = useParams();\n  const [findCompany, setCompany] = useState({});\n  useEffect(() => {\n    async function Company() {\n      const company = await JoblyApi.getCompany(handle);\n      setFindCompany(company);\n    }\n    Company();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Companies details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), console.log(findCompany)]\n  }, void 0, true);\n};\n_s(CompanyDetails, \"P6ZG5zdOGTtEaJ4UnrWjZq8V84g=\", false, function () {\n  return [useParams];\n});\n_c = CompanyDetails;\nvar _c;\n$RefreshReg$(_c, \"CompanyDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","JoblyApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CompanyDetails","_s","handle","findCompany","setCompany","Company","company","getCompany","setFindCompany","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/CompanyDetails.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport { JoblyApi } from \"./Api\";\n\n\n\nexport const CompanyDetails = () => {\n    const { handle } = useParams();\n    const [findCompany, setCompany] = useState({})\n\n    useEffect(() => {\n   async function Company () {\n       const company = await JoblyApi.getCompany(handle);\n       setFindCompany(company); \n   }\n    Company();\n    }, []);\n\n    return (\n        <>\n            <h1>Companies details</h1>\n\n            {console.log(findCompany)}\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIjC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACS,WAAW,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACjB,eAAea,OAAOA,CAAA,EAAI;MACtB,MAAMC,OAAO,GAAG,MAAMX,QAAQ,CAACY,UAAU,CAACL,MAAM,CAAC;MACjDM,cAAc,CAACF,OAAO,CAAC;IAC3B;IACCD,OAAO,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzBC,OAAO,CAACC,GAAG,CAACZ,WAAW,CAAC;EAAA,eAC3B,CAAC;AAEX,CAAC;AAAAF,EAAA,CAnBYD,cAAc;EAAA,QACJN,SAAS;AAAA;AAAAsB,EAAA,GADnBhB,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}