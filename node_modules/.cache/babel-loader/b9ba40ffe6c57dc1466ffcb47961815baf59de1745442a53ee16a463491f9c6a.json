{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/Jobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CompanyCard } from \"./CompanyCard\";\nimport { JoblyApi } from \"./Api\";\nimport { CompanyDetails } from \"./CompanyDetails\";\nimport { NavLink } from \"react-router-dom\";\nimport { RouteComponent } from \"./RouteComponent\";\nimport { SearchBar } from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Jobs = () => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [companyTerm, setCompanyTerm] = useState({});\n  const [currentCompany, setCurrentCompany] = useState(\"\");\n  useEffect(() => {\n    async function geJobs() {\n      const jobs = await JoblyApi.getCompanies();\n      setCompanies(companyData);\n    }\n    getCompanies();\n  }, []);\n  useEffect(() => {\n    async function getCompanies() {\n      const companyData = await JoblyApi.getCompanies();\n      setCompanies(companyData);\n    }\n    getCompanies();\n  }, []);\n  async function lookUpTerm(handle) {\n    const company = await JoblyApi.getCompany(handle);\n    setCompanyTerm(company);\n  }\n  ;\n  const handleClick = e => {\n    const foundCompany = e.target;\n    console.log(\"FOUUUUUUUUND\", foundCompany);\n    setCurrentCompany(currentCompany);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), console.log(\"ALL\", companies), /*#__PURE__*/_jsxDEV(SearchBar, {\n      lookUpTerm: lookUpTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), Object.keys(companyTerm).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n        handle: company.handle,\n        description: company.description\n      }, company.handle, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/companies/\".concat(companyTerm.handle),\n      children: /*#__PURE__*/_jsxDEV(CompanyCard, {\n        handle: companyTerm.handle,\n        description: companyTerm.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Jobs, \"PNo0Rrv6DIvYkHjyY6Bxpmdqs3U=\");\n_c = Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useState","useEffect","CompanyCard","JoblyApi","CompanyDetails","NavLink","RouteComponent","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","companies","setCompanies","companyTerm","setCompanyTerm","currentCompany","setCurrentCompany","geJobs","jobs","getCompanies","companyData","lookUpTerm","handle","company","getCompany","handleClick","e","foundCompany","target","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","map","description","to","concat","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/Jobs.js"],"sourcesContent":["\nimport React, { useState, useEffect} from \"react\";\nimport { CompanyCard } from \"./CompanyCard\";\nimport { JoblyApi } from \"./Api\";\nimport { CompanyDetails } from \"./CompanyDetails\";\nimport { NavLink } from \"react-router-dom\";\nimport { RouteComponent } from \"./RouteComponent\";\nimport { SearchBar } from \"./SearchBar\";\n\n\n\nexport const Jobs = () => {\n    const [companies, setCompanies] = useState([]);\n    const [companyTerm, setCompanyTerm] = useState({});\n    const [currentCompany, setCurrentCompany] = useState(\"\");\n\n\n    useEffect(() => {\n        async function geJobs() {\n            const jobs = await JoblyApi.getCompanies();\n            setCompanies(companyData)\n        }\n        getCompanies();\n    }, []);\n    useEffect(() => {\n        async function getCompanies() {\n            const companyData = await JoblyApi.getCompanies();\n            setCompanies(companyData)\n        }\n        getCompanies();\n    }, []);\n\n    async function lookUpTerm(handle) {\n        const company = await JoblyApi.getCompany(handle);\n        setCompanyTerm(company);\n\n    };\n\n    const handleClick = (e) => {\n        const foundCompany = e.target;\n        console.log(\"FOUUUUUUUUND\", foundCompany);\n        setCurrentCompany(currentCompany);\n    }\n\n    return (\n        <>\n            <h1>Companies</h1>\n            {console.log(\"ALL\", companies)}\n            <SearchBar lookUpTerm={lookUpTerm} />\n            {Object.keys(companyTerm).length === 0 ?\n                <div>\n                    {companies.map(company =>\n                        <CompanyCard\n                            handle={company.handle}\n                            description={company.description}\n                            key={company.handle}\n                        />\n                    )}\n                </div>\n\n                :\n                <NavLink to={`/companies/${companyTerm.handle}`}>\n                    <CompanyCard handle={companyTerm.handle}\n                        description={companyTerm.description} />\n                </NavLink>\n\n            }\n\n        </>\n    )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}