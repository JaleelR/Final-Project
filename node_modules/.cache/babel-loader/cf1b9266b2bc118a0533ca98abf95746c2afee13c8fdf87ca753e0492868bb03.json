{"ast":null,"code":"var _jsxFileName = \"/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/Companies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { CompanyCard } from \"./CompanyCard\";\nimport { JoblyApi } from \"./Api\";\nimport { CompanyDetails } from \"./CompanyDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Companies = () => {\n  _s();\n  const [companies, setCompanies] = useState({});\n  useEffect(() => {\n    async function getCompanies() {\n      const companyData = await JoblyApi.getCompanies();\n      setCompanies(companyData);\n    }\n    getCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), companies.map(company => /*#__PURE__*/_jsxDEV(CompanyCard, {\n      handle: company.handle,\n      description: company.CompanyDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n};\n_s(Companies, \"tJVCd3ce4+AhtyrqgX7aDTlfshc=\");\n_c = Companies;\nvar _c;\n$RefreshReg$(_c, \"Companies\");","map":{"version":3,"names":["React","useEffect","CompanyCard","JoblyApi","CompanyDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","Companies","_s","companies","setCompanies","useState","getCompanies","companyData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","company","handle","description","_c","$RefreshReg$"],"sources":["/Users/jaleelwhaley/Desktop/Final-Project/frontend/src/Companies.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { CompanyCard } from \"./CompanyCard\";\nimport { JoblyApi } from \"./Api\";\nimport { CompanyDetails } from \"./CompanyDetails\";\n\nexport const Companies = () => {\n    const [companies, setCompanies] = useState({});\n    useEffect(() => {\n        async function getCompanies() {\n            const companyData = await JoblyApi.getCompanies();\n            setCompanies(companyData)\n        }\n        getCompanies();\n    }, []);\n    return (\n        <>\n            <h1>Companies</h1>\n            {companies.map(company =>\n                <CompanyCard handle={company.handle}\n                description={company.CompanyDetails} />)}\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9CZ,SAAS,CAAC,MAAM;IACZ,eAAea,YAAYA,CAAA,EAAG;MAC1B,MAAMC,WAAW,GAAG,MAAMZ,QAAQ,CAACW,YAAY,CAAC,CAAC;MACjDF,YAAY,CAACG,WAAW,CAAC;IAC7B;IACAD,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIR,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBT,SAAS,CAACU,GAAG,CAACC,OAAO,iBAClBhB,OAAA,CAACJ,WAAW;MAACqB,MAAM,EAAED,OAAO,CAACC,MAAO;MACpCC,WAAW,EAAEF,OAAO,CAAClB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EAAA,eAC9C,CAAC;AAEX,CAAC;AAAAV,EAAA,CAjBYD,SAAS;AAAAgB,EAAA,GAAThB,SAAS;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}